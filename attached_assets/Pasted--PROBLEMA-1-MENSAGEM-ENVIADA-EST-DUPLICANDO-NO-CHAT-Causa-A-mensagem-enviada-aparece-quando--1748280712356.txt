üö® PROBLEMA 1: MENSAGEM ENVIADA EST√Å DUPLICANDO NO CHAT

Causa: A mensagem enviada aparece quando:

    √â adicionada no setMessages() logo ap√≥s o envio

    E tamb√©m quando o WebSocket devolve a mesma mensagem (direction: 'sent')

Corre√ß√£o esperada:

No evento WebSocket, n√£o re-adicionar mensagens enviadas pelo pr√≥prio usu√°rio se j√° est√£o no estado.
Garanta que, ao enviar uma mensagem (sendMessage), ela seja adicionada manualmente e ignorada no WebSocket se for duplicada.
üö® PROBLEMA 2: MENSAGEM RECEBIDA N√ÉO APARECE EM TEMPO REAL

Causa: O backend est√° recebendo corretamente (webhook funciona), e o WebSocket envia o evento, mas o frontend n√£o est√° tratando ou adicionando a mensagem no chat.

Corre√ß√£o esperada:

No WebSocket listener (socket.on('newMessage', ...)), verifique se:

    direction === 'received'

    phoneNumber === contato atualmente aberto

    Mensagem ainda n√£o est√° em messages[] (evitar duplica√ß√£o)

    Se for v√°lida, adicione no chat via setMessages([...prev, newMsg])

‚úÖ EXEMPLO DE L√ìGICA ESPERADA:

No seu listener do WebSocket:

socket.on("newMessage", (msg) => {
  // Verifica se √© para o chat aberto
  if (msg.phoneNumber !== activePhoneNumber) return;

  setMessages((prev) => {
    const alreadyExists = prev.some(m => m.id === msg.id);
    if (!alreadyExists) {
      return [...prev, msg];
    }
    return prev;
  });
});

‚ö†Ô∏è activePhoneNumber deve ser o n√∫mero do chat que est√° aberto no momento no frontend.
‚ö†Ô∏è IMPORTANTE:

    O WebSocket est√° emitindo os eventos corretamente (newMessage ou outro nome usado).

    N√£o use polling, nem Ajax ‚Äî WebSocket √© a tecnologia correta.

    Corrigir o frontend para distinguir sent e received, e tratar duplica√ß√£o com base no msg.id.

‚úÖ RESUMO DO QUE A IA DEVE FAZER:

    Corrigir l√≥gica de envio para n√£o duplicar mensagem enviada

    Corrigir listener WebSocket para:

        Escutar mensagens novas

        Verificar phoneNumber

        Adicionar mensagem nova recebida no chat em tempo real

    Garantir que setMessages() atualize corretamente sem repetir mensagens