üì≤ Estou desenvolvendo uma aplica√ß√£o de atendimento via WhatsApp, mas preciso corrigir e melhorar toda a interface e funcionamento da aba "Mensagens". 

Atualmente, existem os seguintes problemas:
- As conversas n√£o est√£o sendo listadas corretamente.
- Sempre aparece "0 mensagens" mesmo quando existem mensagens.
- A data aparece como "Invalid Date".
- Toda a organiza√ß√£o visual est√° confusa e sem filtros.

‚úÖ O que eu preciso que voc√™ fa√ßa:
1. A tela de mensagens deve ter, na parte superior, um **seletor de conex√µes WhatsApp** (dropdown ou combo-box) para escolher qual sess√£o/conex√£o ser√° visualizada.
2. Na lateral esquerda, deve ser exibida uma **lista de todas as conversas** da conex√£o selecionada. Essa lista deve conter:
   - Nome do contato ou n√∫mero de telefone.
   - Pr√©via da √∫ltima mensagem.
   - Quantidade de mensagens n√£o lidas (se poss√≠vel).
   - Data da √∫ltima mensagem (formatada corretamente como "Hoje", "Ontem", ou DD/MM/YYYY).
3. Acima da lista de conversas, deve haver um **campo de filtro de texto**, para buscar por:
   - Nome do contato.
   - N√∫mero.
   - (No futuro) etiquetas e tags personalizadas.
4. Ao clicar em um contato na lista, deve abrir no painel principal a **conversa completa desse contato**, com carregamento de mensagens, envio, recebimento, tudo funcionando corretamente.
5. Resolver os erros:
   - "0 mensagens" incorreto.
   - "Invalid Date".
   - Bugs que impedem o carregamento das conversas.
6. A arquitetura precisa suportar **multi-conex√µes WhatsApp**, funcionando de forma separada e organizada para cada conex√£o selecionada.
7. Toda comunica√ß√£o deve ser feita via WebSocket para atualiza√ß√µes em tempo real (novas mensagens, altera√ß√£o no status da conex√£o, etc.).

üöÄ Me entregue:
- C√≥digo completo e funcional do **frontend**, com React (ou framework usado), interface bem estruturada e responsiva.
- C√≥digo do **backend**, incluindo rotas REST e WebSocket para:
   - Listar conversas de uma conex√£o.
   - Listar mensagens de uma conversa.
   - Enviar mensagens.
   - Ouvir novas mensagens em tempo real.
- Corre√ß√µes nas fun√ß√µes de formata√ß√£o de data, contagem de mensagens e exibi√ß√£o dos contatos.

‚ö†Ô∏è Aten√ß√£o:
- Garanta que o sistema funcione de forma fluida, escal√°vel, com tratamento de erros e bom UX.
- Pode usar bibliotecas como date-fns, moment ou dayjs para datas.
- Layout com sidebar fixa √† esquerda, seletor no topo e √°rea de chat ocupando o restante da tela.

üîó Refer√™ncia visual: parecido com WhatsApp Web, Z-Api, WppConnect e sistemas de atendimento omnichannel.

Me entregue a implementa√ß√£o j√° pronta e revisada.
