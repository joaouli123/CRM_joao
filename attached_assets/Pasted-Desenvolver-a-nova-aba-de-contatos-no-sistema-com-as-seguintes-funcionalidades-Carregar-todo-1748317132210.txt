Desenvolver a nova aba de contatos no sistema com as seguintes funcionalidades:

    Carregar todos os contatos da conta, incluindo os novos contatos que chegam com mensagens do WhatsApp.

    Armazenar os dados no banco de dados como nome, telefone, e-mail, observa√ß√£o e etiqueta.

    Permitir adicionar novos contatos, editar contatos existentes e excluir contatos.

    Exibir a lista de contatos com pagina√ß√£o.

    Implementar uma pesquisa em tempo real para encontrar contatos na lista.

    Garantir que os contatos possam ser exclu√≠dos de forma segura.

‚úÖ Tarefas a Serem Realizadas:
1. Carregamento de Contatos

    Ao iniciar a aba de contatos, o sistema deve carregar todos os contatos da conta:

        Contatos carregados de novas mensagens do WhatsApp: Quando uma nova mensagem chega, o sistema deve verificar se o contato j√° existe. Se n√£o, deve salvar o novo contato no banco de dados, incluindo o telefone e, se dispon√≠vel, o nome.

        Exibi√ß√£o de todos os contatos: O sistema deve exibir todos os contatos armazenados no banco de dados, com os campos nome, telefone, e-mail (se dispon√≠vel), observa√ß√£o e etiqueta.

2. Banco de Dados de Contatos

    A tabela de contatos no banco de dados deve ter as seguintes colunas:

        ID: Identificador √∫nico para cada contato.

        Nome: Nome completo do contato.

        Telefone: N√∫mero de telefone do contato.

        E-mail: Endere√ßo de e-mail do contato (opcional, mas deve ser armazenado quando fornecido).

        Observa√ß√£o: Campo livre para anota√ß√µes ou coment√°rios sobre o contato.

        Etiqueta: Para categorizar o contato, com valores como lead, qualificado, desqualificado e outros conforme a necessidade.

Exemplo de Estrutura da Tabela contatos:

CREATE TABLE contatos (
  id SERIAL PRIMARY KEY,
  nome VARCHAR(255),
  telefone VARCHAR(20) UNIQUE NOT NULL,
  email VARCHAR(255),
  observacao TEXT,
  etiqueta VARCHAR(50), -- Ex: lead, qualificado, desqualificado
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

3. Adicionar e Editar Contatos

    A aba de contatos deve permitir a adi√ß√£o de novos contatos e a edi√ß√£o de contatos existentes.

        Adicionar Contato: O usu√°rio pode adicionar um novo contato preenchendo os campos de nome, telefone, e-mail, observa√ß√£o e etiqueta.

        Editar Contato: O usu√°rio pode editar as informa√ß√µes de um contato existente, incluindo nome, telefone, e-mail, observa√ß√£o e etiqueta.

    A valida√ß√£o deve ser feita para garantir que o telefone seja √∫nico e que o campo nome n√£o esteja vazio, por exemplo.

4. Exclus√£o de Contatos

    A funcionalidade de exclus√£o de contatos deve ser implementada.

    O usu√°rio deve poder excluir um contato da lista, e o sistema deve confirmar a exclus√£o antes de remov√™-lo permanentemente do banco de dados.

    A exclus√£o deve ser segura, garantindo que o contato seja realmente removido e que n√£o haja erros no processo.

Fluxo para Exclus√£o:

    Quando o usu√°rio clicar no bot√£o de excluir, o sistema deve exibir uma confirma√ß√£o, como "Voc√™ tem certeza que deseja excluir este contato?"

    Se confirmado, o contato ser√° removido do banco de dados e a lista de contatos ser√° atualizada automaticamente sem a necessidade de recarregar a p√°gina.

5. Listagem de Contatos com Pagina√ß√£o

    A lista de contatos exibida deve ser paginada para lidar com grandes quantidades de dados.

        O sistema deve exibir, por exemplo, 10 ou 20 contatos por p√°gina, com a capacidade de navegar entre as p√°ginas.

        A pagina√ß√£o deve ser din√¢mica e f√°cil de usar (exemplo: bot√µes de "Pr√≥xima P√°gina", "P√°gina Anterior").

6. Pesquisa em Tempo Real

    A aba deve ter uma caixa de pesquisa para permitir que o usu√°rio busque contatos por nome, telefone ou etiqueta.

        A pesquisa deve ser atualizada em tempo real, ou seja, conforme o usu√°rio digitar na barra de pesquisa, a lista de contatos deve ser filtrada automaticamente sem necessidade de recarregar a p√°gina.

        A busca deve ser eficiente e responsiva, mesmo com grandes volumes de dados.

7. Exibi√ß√£o e Atualiza√ß√£o de Dados

    Exibi√ß√£o dos Dados:

        A lista de contatos deve exibir os principais dados (nome, telefone, e-mail, observa√ß√£o e etiqueta) de forma clara.

        As etiquetas podem ser apresentadas como bot√µes ou tags ao lado do nome do contato.

    Atualiza√ß√£o em Tempo Real:

        Se houver altera√ß√µes nos contatos (adicionar, editar ou excluir), a lista deve ser atualizada automaticamente sem necessidade de recarregar a p√°gina.

        A pesquisa deve ser refrescada em tempo real sempre que a lista for alterada.

üéØ Resultados Esperados:

    Carregamento eficiente de contatos, com capacidade de salvar novos contatos automaticamente quando novas mensagens do WhatsApp chegarem.

    Capacidade de adicionar, editar e excluir contatos facilmente, com campos bem definidos e valida√ß√£o adequada.

    Listagem de contatos paginada, permitindo navega√ß√£o f√°cil atrav√©s de p√°ginas.

    Pesquisa em tempo real, permitindo ao usu√°rio buscar contatos rapidamente enquanto digita.

    Banco de dados bem estruturado, com a capacidade de armazenar e organizar dados de contatos de forma eficiente, com etiquetas personaliz√°veis.

    Funcionalidade de exclus√£o de contatos, com confirma√ß√£o para evitar exclus√µes acidentais.

üìù Conclus√£o:

Esse fluxo de trabalho para a aba de contatos permitir√° que o sistema seja din√¢mico e f√°cil de usar, com a capacidade de adicionar, editar, excluir e pesquisar contatos de forma eficiente. A integra√ß√£o com a Evolution API permitir√° que os contatos sejam carregados e sincronizados automaticamente, enquanto a paginac√£o e pesquisa melhorar√£o a navega√ß√£o e a experi√™ncia do usu√°rio.